Текстовые элементы управления : TextBlock, TextBox, RichTextBox, PasswordBox

================================================================================================================================

TextBlock - предназначен для вывода текстовой информации
<StackPanel>
	<TextBlock>какой то текст</TextBlock>
	<TextBlock Text="Другой текст"/>
</StackPanel>

Вложеный элемент Run для разбиения текста на состовляющие
<TextBlock TextWrapping="Wrap">
      <Run FontSize="20" Foreground="Red" FontWeight="Bold">K</Run>
      <Run FontSize="16" Foreground="Black"></Run>
 </TextBlock>

 Свойство LineHeight - позволяет указывать высоту строк.
 Свойство TExtWrapping - позволяет переносить текст. Может принимать значения.
 Wrap - текст всегда разрывается на краю элемента управленияб даже если придется переносить слишком длинные слова.
 WrapWithOverflow - позволяет некоторым строкам выйти за правый край, если не найдется подходящее место для разбиения строки.
 Свойство TextAlignment - выравнивает текст по центру(Center),правому(Right) или левому краю(Left)

 Элемент LineBreak позволяет перенести текст на новую строку.
 <TextBlock >
    Катя: Котики очеень милые
    <LineBreak/>
    Коля: Я не люблю котиков
</TextBlock>

================================================================================================================================

TextBox - предназначен для вывода или ввода текстовой информации.
Поддерживает все свойства, доступные TextBlock.
<StackPanel>
    <TextBox> Катя: Котики очеень милые.</TextBox>
    <TextBox> Коля: Я не люблю котиков.</TextBox>
</StackPanel>

Свойство MaxLength позволяет задать максимальное число вводимых чимволов.
Свойства MinLines и MaxLines определяют минимальное и максимальное кол-во строк, которые должны отображаться в текстовом поле.
Они не влияют на кол-во символов, только на кол-во отображаемых строк(на высоту элемента), при этом не создавая фиксированных размеров.
<StackPanel>
    <TextBox MinLines="3"> Катя: Котики очеень милые.</TextBox>
    <TextBox MaxLines="1"> Коля: Я не люблю котиков.</TextBox>
</StackPanel>

Свойство AcceptReturn позволяет активировать переход на следующую строку при нажатии клавиши Enter.
Свойство AcceptTab позволяет активировать возможность создания табуляции при помощи клавиши Tab.
<StackPanel>
    <TextBox AcceptsReturn="True" AcceptsTab="True"></TextBox>    
</StackPanel>

Свойство VerticalScrollBarVisibility и HorizontalScrollBarVisibility отображают вертикальную и горизонтальную полосы прокрутки.
Свойство IsReadOnly позволяет заблокировать TextBox для редактирования, оставив только возможность чтения.
<StackPanel>
    <TextBox AcceptsReturn="True" AcceptsTab="True"
    MaxLines="10"
    VerticalScrollBarVisibility ="Visible"></TextBox>    
</StackPanel>

================================================================================================================================

Элемент PasswordBox - предназначен для ввода парольной информации, введенный текст скрывается при помощи маски(символов).
PasswordBox не поддерживает работу с буфером обмена.
Строки, вводимые в PasswordBox хранятся в объекте, который хранится в памяти в зашифрованном виде. Ключ, который используется для шифрования строки, генерируется случайным образом и хранится в той части памяти, 
которая никогда не записывается на диск.

Свойство PasswordChar устанавливает символ маски, отображаемый при вводе пароля.
Если это свойство не задано, то по умолчанию для маскисимвола используется черная точка.
<PasswordBox PasswordChar="#" MinHeight="30" />  ####
<PasswordBox MinHeight="30" /> .....

================================================================================================================================

Элементы управления списками.
ListBox - предназначен для создания списков переменной длины, в которых пользователь может выбирать элементы.
Свойство SelectionMode позволяет активировать множественный выбор:
1. Режим Multiple - можно выбрать любой элемент или отменить его выбор, щелкнув на нем;
2. Режим Extended - необходимо зажать клавишу Ctrl или Shift, для выбора нескольких элементов;
3. Режим Single - допускает выделение только одного элемента.

ComboBox - предназначен для отображения коллекции элементов в виде выпадающего списка.
Поддерживает практически любые элементы WPF.
Наиболее эфективный - ComboBoxItem.

Свойство IsSelected позволяет выделить данный элемент как выбранный при запуске приложения.
Свойство IsEnabled позволяет установить данный элемент как недоступный для выбора.

Более специализированные: DataGrid,ListView,TreeView,ToolBar

У всех списков два способа заполнения элементов:
1. Добавление элементов прямо в коллекцию items с помощью кода или XAML
2. Привязка данных - более сложный способ, часто используется при работе с базой данных или другими внешними источниками.

================================================================================================================================

Элементы выбора из диапазона значений:
Данные элементы принимают числовые значения, которые находятся в диапазоне мин /макс
Данные элементы наследуются от класса RangeBase и имеют общие свойства:
1. VAlue - текущее значение элемента.
2. Maximum и Minimum - верхний и нижний предел допустимых значений.
3. SmallChange и  LargeChange - величина, на которую увеличивается или уменьшается значение свойства Value при изменении.

Элемент Slider - ползунок.
Позволяет устанавливать числовое значение использую ползунок.
Свойство Orientation - устанавливает ориентацию элемента.
Свойство IsSnapToTipPlacement - позволяет при перемещении ползунка активировать автоматическую привязку к ближайшей отметке.
Свойство TickPlacement - Определяет размещение отметок возле линейки.
Свойство Ticks -  используется для помещения отметок.

Элемент ProgressBar - индикатор прогресса.
Отображает ход выполнения длительной задачи.

Элемент Calendar - календарь.
<Calendar 
    DisplayDateStart="06.19.2024"
    DisplayDateEnd="06.20.2024">           
</Calendar>
Свойство DisplayMode - задает формат отображения дат. Может принимать значения:
Month (выбрано по умолчанию, отображает все дни текущего месца)
Decade (отображает все года текущего десятилетия)
Year (отображает все месяцы текущего года)

Свойство SelectionMode - определяет способ выделения дат, может принимать следующие значения:
1. SingleDate (можно выбрать только одну дату)
2. SingleRange (нажатию на Ctrl выделяет несколько последовательных дат)
3. MultipleRange (по нажатию на Ctrl выделяет несколько не последовательно идущих диапазонов дат)

Элемент DatePicker - ввод даты
Представляет текстовое поле для ввода даты с выпадающим календарем.
Свойство IsDropDownOpen - позволяет оставить календарь открытым после выбора даты.
Свойство SelectedDateFormat - определяет формат даты: 
Short - дд.мм.гггг
Long - с полным названием месяцев

Элемент ScrollViewer - прокрутка
Обеспеивает прокрутку  содержимого.
Может вмещать в себя только один элемент, поэтому все элементы, помещаемые внутрь необходимо облачить в еще один контейнер.
<ScrollViewer>
    <StackPanel>
        <Button MinHeight="60" Background="red"/>
        <Button MinHeight="60" Background="Green"/>
        <Button MinHeight="60" Background="Blue"/>
        <Button MinHeight="60" Background="Yellow"/>
    </StackPanel>
</ScrollViewer>

Свойства HorizontalScrollBarVisibility и VerticalScrollBarVisibility зхадают активность горизонтаьлной и вертикальной прокрутки.
Свойство CanContentScroll - активирует прокрутку по элементам, то есть при прокрутке контент сдвигается не на несколько пикселей, а к началу следующего элемента.


Элемент ViewBox - масштабирование
Может содержать один дочерний элемент и масштабирует его в зависимости от размеров окна.
Свойство Stretch - позволяет указать, как в занимаемой области должен масштабироваться дочерний элемент.
Свойство StretchDirection - позволяет указать, какие операции разрешены.

Элемент Image - предназначен для работы с изображениями.
Свойство Source - позволяет задать путь к изображению.
Для начала работы с изображениями их нужно разместить внутри проекта и каждому изображению в своствах настроить тип действия при сборке - ресурс.

Элемент TabControl - вкладки.
Позволяет разделить интерфейс на несколько разных зон, которые можно выбрать, нажав на заголовок, который обыно находится сверху элемента управления.
<TabControl>
    <TabItem Header="Первая вкладка">первая вкладка</TabItem>
    <TabItem Header="Вторая вкладка">
        <StackPanel>
            <TextBlock>что то тут написано</TextBlock>
        </StackPanel>
    </TabItem>
</TabControl>

Элемент ToolBar - панель инструментов
Представляет собой панель инструментов: набор команд, обычно расположенный непосредственно под строкой меню в стандартном приложении windows.

Элемент WPFToolBar обычно помещается внутри контейнера ToolBarTray.
Этот контейнер позволяет перемещать элементы пользователю.


Элемент Menu - меню приложения
Данный элемент служит для создания стандартных меню.
Элемент Menu включает набор элементов MenuItem.

Элемент ContextMenu - контекстное меню элемента
Класс ContextMenu Служит для создания контекстных всплывающих меню, отображающихся после нажатия на правую кнопку мыши.





